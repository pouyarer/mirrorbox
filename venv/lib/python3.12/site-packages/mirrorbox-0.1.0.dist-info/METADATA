Metadata-Version: 2.4
Name: mirrorbox
Version: 0.1.0
Summary: A smart, caching proxy for Docker, designed to bypass registry restrictions and accelerate your image pulls.
Author-email: Pouya Rezapour <pouyarezapourr@gmail.com>
License: **Copyright (c) 2025 Pouya Rezapour**  
        Contact: pouyarezapourr@gmail.com
        
        Permission is hereby granted for **both commercial and non-commercial use** of this software and its associated code, **provided that** the following conditions are met:
        
        1. **Notification and Approval:** Prior to using this software or code in any personal or commercial project, you must contact the author (Pouya Rezapour) and inform them about your intended use. Usage is permitted only after this notification.  
        2. **Copyright Notice:** The above copyright notice and this permission notice must be included in all copies or significant portions of the Software.  
        3. **Disclaimer:** The Software is provided "as-is", without any warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose, or non-infringement. The authors shall not be liable for any claims, damages, or other liabilities arising from its use.
        
        By using this software, you agree to comply with the conditions above.
        
Project-URL: Homepage, https://github.com/pouyarer/mirrorbox
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: typer
Requires-Dist: rich
Requires-Dist: requests
Requires-Dist: pyyaml
Requires-Dist: flet
Dynamic: license-file

# MirrorBox üöÄ

**A smart, caching proxy for Docker, designed to bypass registry restrictions and accelerate your image pulls.**

MirrorBox is a modern command-line tool that acts as a smart gateway for Docker. It intelligently routes your Docker image requests through the fastest available mirrors, caches images locally for offline access, and seamlessly integrates with your development workflow.

---

## ‚ú® Key Features

- ‚úÖ **Accelerated Image Pulls:** Automatically benchmarks and selects the fastest, most reliable mirror before every download, dramatically speeding up `docker pull`.
- ‚úÖ **Seamless Docker Compose Integration:** Replace `docker-compose up` with `mirrorbox compose up`. MirrorBox pre-fetches all required images for your services, ensuring your projects start without delay.
- ‚úÖ **Intelligent Local Caching:** Pulled images are automatically cached locally. Subsequent requests are served instantly from your disk, saving bandwidth and enabling offline work.
- ‚úÖ **Full Cache Management:** Simple commands to `list`, `save`, and `remove` cached images.
- ‚úÖ **Configuration Control:** Customize MirrorBox. Set a `priority_mirror` to always use your favorite registry first.
- ‚úÖ **Complete Docker Integration:** List all images currently in your Docker daemon with `list-images`.
- ‚úÖ **Live Monitoring & Reporting:** Get a live dashboard of mirror statuses with `monitor start` and review performance history with `report show`.

---

## üì¶ Installation & Quick Start

MirrorBox requires **Python 3.10+**.  
It is strongly recommended to install it inside a **virtual environment** to avoid conflicts with system packages.

### 1Ô∏è‚É£ Create a Virtual Environment
```bash
python3 -m venv venv
```

## 2Ô∏è‚É£ Activate the Environment
```bash
source venv/bin/activate (Linux)
venv\Scripts\activate.bat (Windonws)
```
## 3Ô∏è‚É£ Install MirrorBox
```bash
pip install mirrorbox
```
## üõ†Ô∏è Usage / Commands
```bash
mirrorbox start
```

Below is a detailed guide to available commands:
## 1. Basic Mirror & Image Commands
## Check Mirror Status
```bash
mirrorbox list-mirrors
```
## Search for an Image
```bash
mirrorbox search nginx:latest
```
## Pull an Image (Smart Pull)
```bash
mirrorbox pull ubuntu:22.04
```
## List Local Docker Images
```bash
mirrorbox list-images
```

## 2. Docker Compose Integration
```bash
mirrorbox compose up -d --build
```

## 3. Cache Management
## List Cached Images
```bash
mirrorbox cache list
```
## Save an Image to Cache
```bash
mirrorbox cache save httpd:latest
```
## Remove Cached Images
```bash
mirrorbox cache remove httpd-latest.tar nginx-latest.tar
```

## 4. Configuration
## View Current Settings
```bash
mirrorbox config show
```
## Set a Priority Mirror
```bash
mirrorbox config set-priority focker.ir
```
## Unset Priority Mirror
```bash
mirrorbox config unset-priority
```

## 5. Monitoring & Reporting
## Show History Report
```bash
mirrorbox report show --limit 15
```
## Launch Live Dashboard
```bash
mirrorbox monitor start --interval 5
```
## üìÑ License
Copyright (c) 2025 Pouya Rezapour.
All Rights Reserved. See the LICENSE file for more details.








